{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to OpenShip\n\n\n \n\n\nMission\n\n\nMost of the majors shipping carriers offer the possibility to create in-house integrated solutions using their APIs.\nThat is quite convenient; however, the integration task can be entirely consuming in term of resources (time and effort).\n\n\nOpenShip is an open source library with the mission of making such tasks the most comfortable possible for developers.\n\n\nTo fulfill this mission this library focus on proposing a unified API in front of specifics carrier's API.\n\n\n\n\nIntegrate multiple carriers: DHL, FedEx and more with ease\n\n\nUse an intuitive, unified API across multiple carriers\n\n\nMove fast by just reading the carrier API documentation\n\n\nUse your developer credentials with negotiated rates\n\n\nTested\n\n\n\n\nOpenship prevent you from reinvinting the wheel and is easy to use:\n\n\n>>> from openship.mappers.dhl import  DHLClient, DHLProxy\n>>> from openship.domain.entities Tracking\n>>> from gds_helpers import jsonify\n>>> \nclient\n \n=\n DHLClient\n(\n\n    \n\"https://xmlpi-ea.dhl.com/XMLShippingServlet\"\n,\n    \n\"YOUR_DHL_SITE_ID\"\n,\n    \n\"YOUR_DHL_SITE_PASSWORD\"\n,\n    \n\"YOUR_DHL_ACCOUNT_NUMBER\"\n,\n    \n\"CARRIER_NAME\"\n\n  \n)\n\n>>> \nproxy\n \n=\n DHLProxy\n(\nclient\n)\n\n>>> \npayload\n \n=\n Tracking.create\n(\ntracking_numbers\n=[\n\"8346088391\"\n])\n\n>>> \ntracking_req_xml_obj\n \n=\n proxy.mapper.create_tracking_request\n(\npayload\n)\n\n>>> \nresponse\n \n=\n proxy.get_trackings\n(\ntracking_req_xml_obj\n)\n\n>>> \ntrackings\n \n=\n proxy.mapper.parse_tracking_response\n(\nresponse\n)\n\n>>> print\n(\njsonify\n(\ntrackings\n))\n\n\n'''\n\n\n[\n\n\n    [\n\n\n        {\n\n\n            \"carrier\": \"DHL\",\n\n\n            \"events\": [\n\n\n                {\n\n\n                    \"code\": \"PU\",\n\n\n                    \"date\": \"2009-08-13\",\n\n\n                    \"description\": \"Shipment picked up\",\n\n\n                    \"location\": \"Hong Kong - Hong Kong \",\n\n\n                    \"signatory\": \"\",\n\n\n                    \"time\": \"23:58:00\"\n\n\n                },\n\n\n                {\n\n\n                    \"code\": \"RW\",\n\n\n                    \"date\": \"2009-08-14\",\n\n\n                    \"description\": \"\",\n\n\n                    \"location\": \"Hong Kong - Hong Kong \",\n\n\n                    \"signatory\": \"21.20\",\n\n\n                    \"time\": \"02:19:50\"\n\n\n                }\n\n\n            ],\n\n\n            \"shipment_date\": \"2009-08-13 23:58:00\",\n\n\n            \"tracking_number\": \"8346088391\"\n\n\n        }\n\n\n    ],\n\n\n    []\n\n\n]\n\n\n'''\n\n\n\n\n\n\nNavigation\n\n\n\n\nArchitecture\n\n\nMappers\n\n\nDHL\n\n\nFeDex\n\n\n\n\n\n\n\n\nPrerequisites\n\n\nOpenShip is compatible with Python 3 +\n\n\nInstalling\n\n\nOpenShip can be installed with \npip\n:\n\n\nFor latest dev versions\n\n\npip install --process-dependency-links -e git://github.com/OpenShip/openship.git#egg\n=\nopenship\n\n\n\n\n\nAlternatively, you can grab the latest source code from \nGitHub\n:\n\n\ngit clone https://github.com/OpenShip/openship.git\n\ncd\n openship\npython setup.py install\n\n\n\n\n\nFor released version (change '@version' at your convenience)\n\n\npip install --process-dependency-links -e git+git://github.com/OpenShip/openship.git@v1.0-beta#egg\n=\nopenship\n\n\n\n\n\nLicense\n\n\nThis project is licensed under the LGPL License - see the \nLICENSE.md\n file for details\n\n\nContributing\n\n\nWe happily welcome contributions, please see \nCONTRIBUTING.md\n for details.",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-openship",
            "text": "",
            "title": "Welcome to OpenShip"
        },
        {
            "location": "/#mission",
            "text": "Most of the majors shipping carriers offer the possibility to create in-house integrated solutions using their APIs.\nThat is quite convenient; however, the integration task can be entirely consuming in term of resources (time and effort).  OpenShip is an open source library with the mission of making such tasks the most comfortable possible for developers.  To fulfill this mission this library focus on proposing a unified API in front of specifics carrier's API.   Integrate multiple carriers: DHL, FedEx and more with ease  Use an intuitive, unified API across multiple carriers  Move fast by just reading the carrier API documentation  Use your developer credentials with negotiated rates  Tested   Openship prevent you from reinvinting the wheel and is easy to use:  >>> from openship.mappers.dhl import  DHLClient, DHLProxy\n>>> from openship.domain.entities Tracking\n>>> from gds_helpers import jsonify\n>>>  client   =  DHLClient ( \n     \"https://xmlpi-ea.dhl.com/XMLShippingServlet\" ,\n     \"YOUR_DHL_SITE_ID\" ,\n     \"YOUR_DHL_SITE_PASSWORD\" ,\n     \"YOUR_DHL_ACCOUNT_NUMBER\" ,\n     \"CARRIER_NAME\" \n   ) \n>>>  proxy   =  DHLProxy ( client ) \n>>>  payload   =  Tracking.create ( tracking_numbers =[ \"8346088391\" ]) \n>>>  tracking_req_xml_obj   =  proxy.mapper.create_tracking_request ( payload ) \n>>>  response   =  proxy.get_trackings ( tracking_req_xml_obj ) \n>>>  trackings   =  proxy.mapper.parse_tracking_response ( response ) \n>>> print ( jsonify ( trackings ))  '''  [      [          {              \"carrier\": \"DHL\",              \"events\": [                  {                      \"code\": \"PU\",                      \"date\": \"2009-08-13\",                      \"description\": \"Shipment picked up\",                      \"location\": \"Hong Kong - Hong Kong \",                      \"signatory\": \"\",                      \"time\": \"23:58:00\"                  },                  {                      \"code\": \"RW\",                      \"date\": \"2009-08-14\",                      \"description\": \"\",                      \"location\": \"Hong Kong - Hong Kong \",                      \"signatory\": \"21.20\",                      \"time\": \"02:19:50\"                  }              ],              \"shipment_date\": \"2009-08-13 23:58:00\",              \"tracking_number\": \"8346088391\"          }      ],      []  ]  '''",
            "title": "Mission"
        },
        {
            "location": "/#navigation",
            "text": "Architecture  Mappers  DHL  FeDex",
            "title": "Navigation"
        },
        {
            "location": "/#prerequisites",
            "text": "OpenShip is compatible with Python 3 +",
            "title": "Prerequisites"
        },
        {
            "location": "/#installing",
            "text": "OpenShip can be installed with  pip :  For latest dev versions  pip install --process-dependency-links -e git://github.com/OpenShip/openship.git#egg = openship  Alternatively, you can grab the latest source code from  GitHub :  git clone https://github.com/OpenShip/openship.git cd  openship\npython setup.py install  For released version (change '@version' at your convenience)  pip install --process-dependency-links -e git+git://github.com/OpenShip/openship.git@v1.0-beta#egg = openship",
            "title": "Installing"
        },
        {
            "location": "/#license",
            "text": "This project is licensed under the LGPL License - see the  LICENSE.md  file for details",
            "title": "License"
        },
        {
            "location": "/#contributing",
            "text": "We happily welcome contributions, please see  CONTRIBUTING.md  for details.",
            "title": "Contributing"
        },
        {
            "location": "/architecture/",
            "text": "JSON In ... JSON out\n\n\n\n\nAbstractions\n\n\n\n\n\n\n\n\nLayers of abstraction\n\n\n\n\n\n\n\n\n\n\nProxy\n\n\n\n\n\n\nClient, Mapper\n\n\n\n\n\n\nGenerated Data Types (from Carriers specifications)\n\n\n\n\n\n\n\n\n\n\nDomain\n\n\n\n\n\n\nClient\n\n\n\n\nThe client holds all data related to specific carrier API credentials and configurations\n\n\neg: FedexClient(\"API_URL\", \"FEDEX_USER_KEY\", \"FEDEX_PASSWORD\", \"FEDEX_ACCOUNT_NUMBER\", \"FEDEX_METER_NUMBER\", \"CARRIER_NAME\")\n\n\n\n\n\n\n\n\nMapper\n\n\n\n\nThe mapper handles the conversion from OpenShip united API Data types to Carrier specific API Datatypes.\n\n\nNote: Here is the core of OpenShip extensibility and customizability. You can extend the default mapper or write your own.\n\n\nIn most common cases the developer integrating a shipping carrier API has to write or extend mappers\n\n\n\n\n\n\n\n\nProxy\n\n\n\n\nThe proxy takes care of the communication with the specific carrier open API\n\n\n\n\n\n\n\n\nUnified Data Types\n\n\n\n\nDefined by cross-referencing common data types among multiple carriers, the unified data types constitute a meaningful shared API interface.",
            "title": "Architecture"
        },
        {
            "location": "/architecture/#json-in-json-out",
            "text": "",
            "title": "JSON In ... JSON out"
        },
        {
            "location": "/architecture/#abstractions",
            "text": "Layers of abstraction      Proxy    Client, Mapper    Generated Data Types (from Carriers specifications)",
            "title": "Abstractions"
        },
        {
            "location": "/architecture/#domain",
            "text": "Client   The client holds all data related to specific carrier API credentials and configurations  eg: FedexClient(\"API_URL\", \"FEDEX_USER_KEY\", \"FEDEX_PASSWORD\", \"FEDEX_ACCOUNT_NUMBER\", \"FEDEX_METER_NUMBER\", \"CARRIER_NAME\")     Mapper   The mapper handles the conversion from OpenShip united API Data types to Carrier specific API Datatypes.  Note: Here is the core of OpenShip extensibility and customizability. You can extend the default mapper or write your own.  In most common cases the developer integrating a shipping carrier API has to write or extend mappers     Proxy   The proxy takes care of the communication with the specific carrier open API     Unified Data Types   Defined by cross-referencing common data types among multiple carriers, the unified data types constitute a meaningful shared API interface.",
            "title": "Domain"
        },
        {
            "location": "/fedex/",
            "text": "FedEx\n\n\nClient\n\n\nConfigure your client\n\n\nfrom\n \nopenship.mappers.fedex\n \nimport\n  \nFedexClient\n\n\n\nfedexClient\n \n=\n \nFedexClient\n(\n\n  \n\"https://wsbeta.fedex.com:443/web-services\"\n,\n\n  \n\"FEDEX_USER_KEY\"\n,\n\n  \n\"FEDEX_PASSWORD\"\n,\n\n  \n\"FEDEX_ACCOUNT_NUMBER\"\n,\n\n  \n\"FEDEX_METER_NUMBER\"\n,\n\n  \n\"CARRIER_NAME\"\n              \n# optional will be FeDex by default\n\n\n)\n\n\n\n\n\n\nProxy\n\n\nUse the default proxy.\n\n\nfrom\n \nopenship.mappers.fedex\n \nimport\n \nFedexProxy\n\n\n\nfedexProxy\n \n=\n \nFedexProxy\n(\nfedexClient\n)\n\n\n\n\n\n\nQuotes (Rate)\n\n\nUse FedEx mapper and proxy to get quotes.\n\n\nfrom\n \nopenship.domain.entities\n \nimport\n \nQuote\n\n\nfrom\n \ngds_helpers\n \nimport\n \njsonify\n\n\n\n# JSON data\n\n\n\nshipper\n \n=\n \n{\n\"address\"\n:\n \n{\n\"postal_code\"\n:\n\"H3N1S4\"\n,\n \n\"country_code\"\n:\n\"CA\"\n}}\n\n\nrecipient\n \n=\n \n{\n\"address\"\n:\n \n{\n\"city\"\n:\n\"Lome\"\n,\n \n\"country_code\"\n:\n\"TG\"\n}}\n\n\nshipment_details\n \n=\n \n{\n\"packages\"\n:\n \n[{\n\"id\"\n:\n\"1\"\n,\n \n\"height\"\n:\n3\n,\n \n\"lenght\"\n:\n10\n,\n \n\"width\"\n:\n3\n,\n\"weight\"\n:\n4.0\n}]}\n\n\n\n# create domain quote request object from json\n\n\npayload\n \n=\n \nQuote\n.\ncreate\n(\nshipper\n=\nshipper\n,\n \nrecipient\n=\nrecipient\n,\n \nshipment_details\n=\nshipment_details\n)\n\n\n\n# get Fedex quote request xml object from payload\n\n\nrequest\n \n=\n \nfedexProxy\n.\nmapper\n.\ncreate_quote_request\n(\npayload\n)\n\n\n\n# request quotes from Fedex servers using the proxy\n\n\nresponse\n \n=\n \nfedexProxy\n.\nget_quotes\n(\nrequest\n)\n\n\n\n# extract domain response from Fedex quote response\n\n\nquotes\n \n=\n \nfedexProxy\n.\nmapper\n.\nparse_quote_response\n(\nresponse\n)\n\n\n\n\n\n\nprint\n(\njsonify\n(\nquotes\n))\n\n\n# -->\n\n\n'''\n\n\n[\n\n\n    [\n\n\n        {\n\n\n            \"base_charge\": 230.49,\n\n\n            \"carrier\": \"Fedex\",\n\n\n            \"delivery_date\": null,\n\n\n            \"delivery_time\": null,\n\n\n            \"discount\": 0.0,\n\n\n            \"duties_and_taxes\": 0.0,\n\n\n            \"extra_charges\": [\n\n\n                {\n\n\n                    \"name\": \"FUEL\",\n\n\n                    \"value\": 9.22\n\n\n                }\n\n\n            ],\n\n\n            \"pickup_date\": null,\n\n\n            \"pickup_time\": null,\n\n\n            \"service_name\": \"INTERNATIONAL_PRIORITY\",\n\n\n            \"service_type\": \"PAYOR_ACCOUNT_SHIPMENT\",\n\n\n            \"total_charge\": 239.71\n\n\n        },\n\n\n        {\n\n\n            \"base_charge\": 207.47,\n\n\n            \"carrier\": \"Fedex\",\n\n\n            \"delivery_date\": null,\n\n\n            \"delivery_time\": null,\n\n\n            \"discount\": 0.0,\n\n\n            \"duties_and_taxes\": 0.0,\n\n\n            \"extra_charges\": [\n\n\n                {\n\n\n                    \"name\": \"FUEL\",\n\n\n                    \"value\": 8.3\n\n\n                }\n\n\n            ],\n\n\n            \"pickup_date\": null,\n\n\n            \"pickup_time\": null,\n\n\n            \"service_name\": \"INTERNATIONAL_ECONOMY\",\n\n\n            \"service_type\": \"PAYOR_ACCOUNT_SHIPMENT\",\n\n\n            \"total_charge\": 215.77\n\n\n        }\n\n\n    ],\n\n\n    []\n\n\n]\n\n\n'''\n\n\n\n\n\n\nTracking\n\n\nUse DHL mapper and proxy to get trackings.\n\n\nfrom\n \nopenship.domain.entities\n \nTracking\n\n\n\npayload\n \n=\n \nTracking\n.\ncreate\n(\ntracking_numbers\n=\n[\n\"794887075005\"\n])\n\n\n\ntracking_req_xml_obj\n \n=\n \nfedexProxy\n.\nmapper\n.\ncreate_tracking_request\n(\npayload\n)\n\n\n\nresponse\n \n=\n \nfedexProxy\n.\nget_trackings\n(\ntracking_req_xml_obj\n)\n\n\n\ntrackings\n \n=\n \nfedexProxy\n.\nmapper\n.\nparse_tracking_response\n(\nresponse\n)\n\n\n\n\n\n\nprint\n(\njsonify\n(\ntrackings\n))\n\n\n'''\n\n\n[\n\n\n    [\n\n\n        {\n\n\n            \"carrier\": \"carrier_name\",\n\n\n            \"events\": [\n\n\n                {\n\n\n                    \"code\": \"OC\",\n\n\n                    \"date\": \"2016-11-17 03:13:01-06:00\",\n\n\n                    \"description\": \"Shipment information sent to FedEx\",\n\n\n                    \"location\": \"CUSTOMER\",\n\n\n                    \"signatory\": None,\n\n\n                    \"time\": None\n\n\n                }\n\n\n            ],\n\n\n            \"shipment_date\": \"2016-11-17 00:00:00\",\n\n\n            \"tracking_number\": \"794887075005\"\n\n\n        }\n\n\n    ],\n\n\n    []\n\n\n]\n\n\n'''",
            "title": "FedEx"
        },
        {
            "location": "/fedex/#fedex",
            "text": "",
            "title": "FedEx"
        },
        {
            "location": "/fedex/#client",
            "text": "Configure your client  from   openship.mappers.fedex   import    FedexClient  fedexClient   =   FedexClient ( \n   \"https://wsbeta.fedex.com:443/web-services\" , \n   \"FEDEX_USER_KEY\" , \n   \"FEDEX_PASSWORD\" , \n   \"FEDEX_ACCOUNT_NUMBER\" , \n   \"FEDEX_METER_NUMBER\" , \n   \"CARRIER_NAME\"                # optional will be FeDex by default  )",
            "title": "Client"
        },
        {
            "location": "/fedex/#proxy",
            "text": "Use the default proxy.  from   openship.mappers.fedex   import   FedexProxy  fedexProxy   =   FedexProxy ( fedexClient )",
            "title": "Proxy"
        },
        {
            "location": "/fedex/#quotes-rate",
            "text": "Use FedEx mapper and proxy to get quotes.  from   openship.domain.entities   import   Quote  from   gds_helpers   import   jsonify  # JSON data  shipper   =   { \"address\" :   { \"postal_code\" : \"H3N1S4\" ,   \"country_code\" : \"CA\" }}  recipient   =   { \"address\" :   { \"city\" : \"Lome\" ,   \"country_code\" : \"TG\" }}  shipment_details   =   { \"packages\" :   [{ \"id\" : \"1\" ,   \"height\" : 3 ,   \"lenght\" : 10 ,   \"width\" : 3 , \"weight\" : 4.0 }]}  # create domain quote request object from json  payload   =   Quote . create ( shipper = shipper ,   recipient = recipient ,   shipment_details = shipment_details )  # get Fedex quote request xml object from payload  request   =   fedexProxy . mapper . create_quote_request ( payload )  # request quotes from Fedex servers using the proxy  response   =   fedexProxy . get_quotes ( request )  # extract domain response from Fedex quote response  quotes   =   fedexProxy . mapper . parse_quote_response ( response )   print ( jsonify ( quotes ))  # -->  '''  [      [          {              \"base_charge\": 230.49,              \"carrier\": \"Fedex\",              \"delivery_date\": null,              \"delivery_time\": null,              \"discount\": 0.0,              \"duties_and_taxes\": 0.0,              \"extra_charges\": [                  {                      \"name\": \"FUEL\",                      \"value\": 9.22                  }              ],              \"pickup_date\": null,              \"pickup_time\": null,              \"service_name\": \"INTERNATIONAL_PRIORITY\",              \"service_type\": \"PAYOR_ACCOUNT_SHIPMENT\",              \"total_charge\": 239.71          },          {              \"base_charge\": 207.47,              \"carrier\": \"Fedex\",              \"delivery_date\": null,              \"delivery_time\": null,              \"discount\": 0.0,              \"duties_and_taxes\": 0.0,              \"extra_charges\": [                  {                      \"name\": \"FUEL\",                      \"value\": 8.3                  }              ],              \"pickup_date\": null,              \"pickup_time\": null,              \"service_name\": \"INTERNATIONAL_ECONOMY\",              \"service_type\": \"PAYOR_ACCOUNT_SHIPMENT\",              \"total_charge\": 215.77          }      ],      []  ]  '''",
            "title": "Quotes (Rate)"
        },
        {
            "location": "/fedex/#tracking",
            "text": "Use DHL mapper and proxy to get trackings.  from   openship.domain.entities   Tracking  payload   =   Tracking . create ( tracking_numbers = [ \"794887075005\" ])  tracking_req_xml_obj   =   fedexProxy . mapper . create_tracking_request ( payload )  response   =   fedexProxy . get_trackings ( tracking_req_xml_obj )  trackings   =   fedexProxy . mapper . parse_tracking_response ( response )   print ( jsonify ( trackings ))  '''  [      [          {              \"carrier\": \"carrier_name\",              \"events\": [                  {                      \"code\": \"OC\",                      \"date\": \"2016-11-17 03:13:01-06:00\",                      \"description\": \"Shipment information sent to FedEx\",                      \"location\": \"CUSTOMER\",                      \"signatory\": None,                      \"time\": None                  }              ],              \"shipment_date\": \"2016-11-17 00:00:00\",              \"tracking_number\": \"794887075005\"          }      ],      []  ]  '''",
            "title": "Tracking"
        },
        {
            "location": "/dhl/",
            "text": "DHL\n\n\nClient\n\n\nConfigure your client\n\n\nfrom\n \nopenship.mappers.dhl\n \nimport\n  \nDHLClient\n\n\n\ndhlClient\n \n=\n \nDHLClient\n(\n\n  \n\"https://xmlpi-ea.dhl.com/XMLShippingServlet\"\n,\n\n  \n\"YOUR_DHL_SITE_ID\"\n,\n\n  \n\"YOUR_DHL_SITE_PASSWORD\"\n,\n\n  \n\"YOUR_DHL_ACCOUNT_NUMBER\"\n,\n\n  \n\"CARRIER_NAME\"\n              \n# optional will be DHL by default\n\n\n)\n\n\n\n\n\n\nProxy\n\n\nUse the default proxy.\n\n\nfrom\n \nopenship.mappers.dhl\n \nimport\n \nDHLProxy\n\n\n\ndhlProxy\n \n=\n \nDHLProxy\n(\ndhlClient\n)\n\n\n\n\n\n\nOr create a proxy with a custom mapper.\n\n\nfrom\n \nopenship.mappers.dhl.dhl_mapper\n \nimport\n \nDHLMapper\n\n\n\ndhlMapper\n \n=\n \nDHLMapper\n(\ndhlClient\n)\n\n\ncustomProxy\n \n=\n \nDHLProxy\n(\ndhlClient\n,\n \ndhlMapper\n)\n\n\n\n\n\n\nQuotes\n\n\nUse DHL mapper and proxy to get quotes.\n\n\nfrom\n \nopenship.domain.entities\n \nimport\n \nQuote\n\n\nfrom\n \ngds_helpers\n \nimport\n \njsonify\n\n\n\n# JSON data\n\n\n\nshipper\n \n=\n \n{\n\"address\"\n:\n \n{\n\"postal_code\"\n:\n\"H3N1S4\"\n,\n \n\"country_code\"\n:\n\"CA\"\n}}\n\n\nrecipient\n \n=\n \n{\n\"address\"\n:\n \n{\n\"city\"\n:\n\"Lome\"\n,\n \n\"country_code\"\n:\n\"TG\"\n}}\n\n\nshipment_details\n \n=\n \n{\n\"packages\"\n:\n \n[{\n\"id\"\n:\n\"1\"\n,\n \n\"height\"\n:\n3\n,\n \n\"lenght\"\n:\n10\n,\n \n\"width\"\n:\n3\n,\n\"weight\"\n:\n4.0\n}]}\n\n\n\n# create domain quote request payload from json\n\n\npayload\n \n=\n \nQuote\n.\ncreate\n(\nshipper\n=\nshipper\n,\n \nrecipient\n=\nrecipient\n,\n \nshipment_details\n=\nshipment_details\n)\n\n\n\n# get DHL quote request xml object from payload \n\n\nrequest\n \n=\n \ndhlProxy\n.\nmapper\n.\ncreate_quote_request\n(\npayload\n)\n\n\n\n#request quotes from DHL servers using the provider\n\n\nresponse\n \n=\n \ndhlProxy\n.\nget_quotes\n(\nrequest\n)\n\n\n\n#extract domain response from DHL quote response\n\n\nquotes\n \n=\n \ndhlProxy\n.\nmapper\n.\nparse_quote_response\n(\nresponse\n)\n\n\n\n\n\n\nprint\n(\njsonify\n(\nquotes\n))\n\n\n# -->\n\n\n'''\n\n\n[\n\n\n    [\n\n\n        {\n\n\n            \"base_charge\": 195.32,\n\n\n            \"carrier\": \"DHL\",\n\n\n            \"discount\": 0,\n\n\n            \"duties_and_taxes\": 0,\n\n\n            \"extra_charges\": [\n\n\n                {\n\n\n                    \"name\": \"FUEL SURCHARGE\",\n\n\n                    \"value\": 12.7\n\n\n                }\n\n\n            ],\n\n\n            \"service_name\": \"EXPRESS WORLDWIDE DOC\",\n\n\n            \"service_type\": \"TD\",\n\n\n            \"total_charge\": 208.02\n\n\n        }\n\n\n    ],\n\n\n    []--> Error list\n\n\n]\n\n\n'''\n\n\n\n\n\n\nTracking\n\n\nUse DHL mapper and proxy to get trackings.\n\n\nfrom\n \nopenship.domain.entities\n \nTracking\n\n\n\npayload\n \n=\n \nTracking\n.\ncreate\n(\ntracking_numbers\n=\n[\n\"7740842550\"\n,\n \n\"1815115363\"\n])\n\n\n\ntracking_req_xml_obj\n \n=\n \ndhlProxy\n.\nmapper\n.\ncreate_tracking_request\n(\npayload\n)\n\n\n\nresponse\n \n=\n \ndhlProxy\n.\nget_trackings\n(\ntracking_req_xml_obj\n)\n\n\n\ntrackings\n \n=\n \ndhlProxy\n.\nmapper\n.\nparse_tracking_response\n(\nresponse\n)\n\n\n\n\n\n\nprint\n(\njsonify\n(\ntrackings\n))\n\n\n# -->\n\n\n'''\n\n\n[\n\n\n    [\n\n\n        {\n\n\n            \"carrier\": \"carrier_name\",\n\n\n            \"events\": [\n\n\n                {\n\n\n                    \"code\": \"PU\",\n\n\n                    \"date\": \"2009-08-26\",\n\n\n                    \"description\": \"Shipment picked up\",\n\n\n                    \"location\": \"Singapore - Singapore \",\n\n\n                    \"signatory\": \"\",\n\n\n                    \"time\": \"10:00:00\"\n\n\n                }\n\n\n            ],\n\n\n            \"shipment_date\": \"2009-08-26 10:00:00\",\n\n\n            \"tracking_number\": \"7740842550\"\n\n\n        },\n\n\n        {\n\n\n            \"carrier\": \"carrier_name\",\n\n\n            \"events\": [\n\n\n                {\n\n\n                    \"code\": \"PU\",\n\n\n                    \"date\": \"2009-08-13\",\n\n\n                    \"description\": \"Shipment picked up\",\n\n\n                    \"location\": \"Hong Kong - Hong Kong \",\n\n\n                    \"signatory\": \"\",\n\n\n                    \"time\": \"23:58:00\"\n\n\n                },\n\n\n                {\n\n\n                    \"code\": \"RW\",\n\n\n                    \"date\": \"2009-08-14\",\n\n\n                    \"description\": \"\",\n\n\n                    \"location\": \"Hong Kong - Hong Kong \",\n\n\n                    \"signatory\": \"21.20\",\n\n\n                    \"time\": \"02:19:50\"\n\n\n                }\n\n\n            ],\n\n\n            \"shipment_date\": \"2009-08-13 23:58:00\",\n\n\n            \"tracking_number\": \"1815115363\"\n\n\n        }\n\n\n    ],\n\n\n    []\n\n\n]\n\n\n'''",
            "title": "DHL"
        },
        {
            "location": "/dhl/#dhl",
            "text": "",
            "title": "DHL"
        },
        {
            "location": "/dhl/#client",
            "text": "Configure your client  from   openship.mappers.dhl   import    DHLClient  dhlClient   =   DHLClient ( \n   \"https://xmlpi-ea.dhl.com/XMLShippingServlet\" , \n   \"YOUR_DHL_SITE_ID\" , \n   \"YOUR_DHL_SITE_PASSWORD\" , \n   \"YOUR_DHL_ACCOUNT_NUMBER\" , \n   \"CARRIER_NAME\"                # optional will be DHL by default  )",
            "title": "Client"
        },
        {
            "location": "/dhl/#proxy",
            "text": "Use the default proxy.  from   openship.mappers.dhl   import   DHLProxy  dhlProxy   =   DHLProxy ( dhlClient )   Or create a proxy with a custom mapper.  from   openship.mappers.dhl.dhl_mapper   import   DHLMapper  dhlMapper   =   DHLMapper ( dhlClient )  customProxy   =   DHLProxy ( dhlClient ,   dhlMapper )",
            "title": "Proxy"
        },
        {
            "location": "/dhl/#quotes",
            "text": "Use DHL mapper and proxy to get quotes.  from   openship.domain.entities   import   Quote  from   gds_helpers   import   jsonify  # JSON data  shipper   =   { \"address\" :   { \"postal_code\" : \"H3N1S4\" ,   \"country_code\" : \"CA\" }}  recipient   =   { \"address\" :   { \"city\" : \"Lome\" ,   \"country_code\" : \"TG\" }}  shipment_details   =   { \"packages\" :   [{ \"id\" : \"1\" ,   \"height\" : 3 ,   \"lenght\" : 10 ,   \"width\" : 3 , \"weight\" : 4.0 }]}  # create domain quote request payload from json  payload   =   Quote . create ( shipper = shipper ,   recipient = recipient ,   shipment_details = shipment_details )  # get DHL quote request xml object from payload   request   =   dhlProxy . mapper . create_quote_request ( payload )  #request quotes from DHL servers using the provider  response   =   dhlProxy . get_quotes ( request )  #extract domain response from DHL quote response  quotes   =   dhlProxy . mapper . parse_quote_response ( response )   print ( jsonify ( quotes ))  # -->  '''  [      [          {              \"base_charge\": 195.32,              \"carrier\": \"DHL\",              \"discount\": 0,              \"duties_and_taxes\": 0,              \"extra_charges\": [                  {                      \"name\": \"FUEL SURCHARGE\",                      \"value\": 12.7                  }              ],              \"service_name\": \"EXPRESS WORLDWIDE DOC\",              \"service_type\": \"TD\",              \"total_charge\": 208.02          }      ],      []--> Error list  ]  '''",
            "title": "Quotes"
        },
        {
            "location": "/dhl/#tracking",
            "text": "Use DHL mapper and proxy to get trackings.  from   openship.domain.entities   Tracking  payload   =   Tracking . create ( tracking_numbers = [ \"7740842550\" ,   \"1815115363\" ])  tracking_req_xml_obj   =   dhlProxy . mapper . create_tracking_request ( payload )  response   =   dhlProxy . get_trackings ( tracking_req_xml_obj )  trackings   =   dhlProxy . mapper . parse_tracking_response ( response )   print ( jsonify ( trackings ))  # -->  '''  [      [          {              \"carrier\": \"carrier_name\",              \"events\": [                  {                      \"code\": \"PU\",                      \"date\": \"2009-08-26\",                      \"description\": \"Shipment picked up\",                      \"location\": \"Singapore - Singapore \",                      \"signatory\": \"\",                      \"time\": \"10:00:00\"                  }              ],              \"shipment_date\": \"2009-08-26 10:00:00\",              \"tracking_number\": \"7740842550\"          },          {              \"carrier\": \"carrier_name\",              \"events\": [                  {                      \"code\": \"PU\",                      \"date\": \"2009-08-13\",                      \"description\": \"Shipment picked up\",                      \"location\": \"Hong Kong - Hong Kong \",                      \"signatory\": \"\",                      \"time\": \"23:58:00\"                  },                  {                      \"code\": \"RW\",                      \"date\": \"2009-08-14\",                      \"description\": \"\",                      \"location\": \"Hong Kong - Hong Kong \",                      \"signatory\": \"21.20\",                      \"time\": \"02:19:50\"                  }              ],              \"shipment_date\": \"2009-08-13 23:58:00\",              \"tracking_number\": \"1815115363\"          }      ],      []  ]  '''",
            "title": "Tracking"
        },
        {
            "location": "/reference/",
            "text": "API",
            "title": "Reference"
        }
    ]
}